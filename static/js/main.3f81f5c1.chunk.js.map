{"version":3,"sources":["context.js","SetupForm.js","Loading.js","Modal.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","isModelOpen","setIsModelOpen","amount","category","difficulty","type","quiz","setQuiz","fetchQuestions","url","a","axios","get","catch","err","console","log","response","data","results","length","nextQuestion","oldIndex","openModel","Provider","value","checkAnswer","oldState","closeModel","handleSubmit","e","preventDefault","query","handleChange","target","name","oldQuiz","useGlobalContext","useContext","SetupForm","className","htmlFor","id","onChange","min","max","onClick","Loading","Modal","App","question","incorrect_answers","correct_answer","answers","i","j","Math","floor","random","dangerouslySetInnerHTML","__html","map","ans","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f81f5c1.chunk.js","sourcesContent":["import axios from 'axios'\nimport React, { useState, useContext, useEffect } from 'react'\n\n// const table = {\n//   sports: 21,\n//   history: 23,\n//   politics: 24,\n// }\n\n// const API_ENDPOINT = 'https://opentdb.com/api.php?'\n\n// const amount = 10;\n// const category = 21;\n// const difficulty = \"easy\";\n// const type = \"multiple\";\n\n// const query = `amount=${amount}&category=${category}&difficulty=${difficulty}&type=${type}`;\n//const queryTemp = 'amount=10&category=21&difficulty=easy&type=multiple';\n// const url = API_ENDPOINT + query;\n\n// fetch(url).then((response) => {\n//   console.log(response.json());\n// }, (reject) => {\n//   console.log('your response reject');\n// });\n\n\n\n\n\nconst AppContext = React.createContext()\n\n\nconst AppProvider = ({ children }) => {\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [isModelOpen, setIsModelOpen] = useState(false);\n  const [quiz, setQuiz] = useState({\n    amount: 5,\n    category: \"21\",\n    difficulty: \"easy\",\n    type: \"multiple\"\n  })\n\n\n  const fetchQuestions = async (url) => {\n    setLoading(true);\n    setWaiting(false);\n    const response = await axios.get(url).catch((err) => {\n\n      console.log(err);\n    });\n    if (response) {\n      const data = response.data.results;\n      if (data.length > 0) {\n        setQuestions(data);\n        setLoading(false);\n        setWaiting(false);\n        setError(false);\n      } else {\n        setWaiting(true);\n        setError(true);\n      }\n    } else {\n      setWaiting(true);\n    }\n  }\n\n\n  const nextQuestion = () => {\n    setIndex((oldIndex) => {\n      const index = oldIndex + 1;\n      if (index > questions.length - 1) {\n        openModel();\n        return 0;\n      }\n      return index;\n    })\n  }\n\n  const openModel = () => {\n    setIsModelOpen(true);\n  }\n\n  const closeModel = () => {\n    console.log(\"working\");\n    setWaiting(true);\n    setCorrect(0);\n    setIsModelOpen(false);\n  }\n  const checkAnswer = (value) => {\n    if (value === true) {\n      setCorrect((oldState) => {\n        return oldState + 1;\n      })\n    }\n    nextQuestion();\n  }\n\n  // useEffect(() => {\n  //   fetchQuestions(url)\n  // }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    console.log(name, value);\n\n    console.log(value);\n\n    setQuiz((oldQuiz) => {\n      return { ...oldQuiz, [name]: value }\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { amount, category, difficulty, type } = quiz;\n    const API_ENDPOINT = 'https://opentdb.com/api.php?';\n    const query = `amount=${amount}&category=${category}&difficulty=${difficulty}&type=${type}`;\n    console.log(query);\n    // const queryt = 'amount=5&category=21&difficulty=easy&type=boolean';\n\n\n    const url = API_ENDPOINT + query;\n\n    fetchQuestions(url);\n\n\n  }\n\n  return <AppContext.Provider value={\n    {\n      waiting,\n      loading,\n      questions,\n      index,\n      correct,\n      error,\n      isModelOpen,\n      quiz,\n      nextQuestion,\n      checkAnswer,\n      closeModel,\n      handleSubmit,\n      handleChange,\n\n    }}>\n    {children}\n  </AppContext.Provider>\n}\n\n\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst SetupForm = () => {\n  const { quiz, handleChange, handleSubmit, error } = useGlobalContext();\n  return <main>\n    <section className=\"quiz quiz-small\">\n      <form className=\"setup-form\">\n        <h2>Quiz</h2>\n        {/* {amount} */}\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">No of questions</label>\n          <input type=\"number\" name=\"amount\" id=\"amount\"\n            value={quiz.amount}\n            className=\"form-input\"\n            onChange={handleChange}\n            min={1}\n            max={50}\n          />\n        </div>\n\n        {/* category */}\n        <div className=\"form-control\">\n          <label htmlFor=\"category\">Category</label>\n          <select name=\"category\" id=\"category\"\n            value={quiz.category}\n            onChange={handleChange}\n            className=\"form-input\">\n            <option value=\"\">Any Category</option>\n            <option value=\"9\">General Knowledge</option>\n            <option value=\"10\">Entertainment: Books</option>\n            <option value=\"11\">Entertainment: Film</option>\n            <option value=\"12\">Entertainment: Music</option>\n            <option value=\"13\">Entertainment: Musicals Theatres</option>\n            <option value=\"14\">Entertainment: Television</option>\n            <option value=\"15\">Entertainment: Video Games</option>\n            <option value=\"16\">Entertainment: Board Games</option>\n            <option value=\"17\">Science and Nature</option>\n            <option value=\"18\">Science: Computers</option>\n            <option value=\"19\">Science: Mathematics</option>\n            <option value=\"20\">Mythology</option>\n            <option value=\"21\">Sports</option>\n            <option value=\"22\">Geography</option>\n            <option value=\"23\">History</option>\n            <option value=\"24\">Politics</option>\n            <option value=\"25\">Art</option>\n            <option value=\"26\">Celebrities</option>\n            <option value=\"27\">Animals</option>\n            <option value=\"28\">Vehicles</option>\n            <option value=\"29\">Entertainment: Comics</option>\n            <option value=\"30\">Science: Gadgets</option>\n            <option value=\"31\">Entertainment: Japanese Anime Manga</option>\n            <option value=\"32\">Entertainment: Cartoon &amp; Animations</option>\n\n          </select>\n        </div>\n\n        {/* difficulty */}\n        <div className=\"form-control\">\n          <label htmlFor=\"difficulty\">difficulty</label>\n          <select name=\"difficulty\" id=\"difficulty\"\n            value={quiz.difficulty}\n            onChange={handleChange}\n            className=\"form-input\">\n            <option value=\"easy\">easy</option>\n            <option value=\"medium\">medium</option>\n            <option value=\"hard\">hard</option>\n          </select>\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"type\">type</label>\n          <select name=\"type\" id=\"type\"\n            value={quiz.type}\n            onChange={handleChange}\n            className=\"form-input\">\n            <option value=\"multiple\">multiple</option>\n            <option value=\"boolean\">True/false</option>\n\n          </select>\n        </div>\n\n        {error && <p className=\"error\">Can't Generate Questions change options</p>}\n\n        <button className=\"submit-btn\" type=\"submit\" onClick={handleSubmit} >\n          Start\n        </button>\n      </form>\n    </section>\n  </main>\n}\n\nexport default SetupForm\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Modal = () => {\n  const { isModelOpen, closeModel, correct, questions } = useGlobalContext();\n  return <div className={`${isModelOpen ? 'modal-container isOpen' : 'modal-container'}`}>\n    {/* return <div className=\"modal-container\"> */}\n    <div className=\"modal-content\">\n      <h2>congrats!</h2>\n      <p>You answered {correct} questions correctly</p>\n      <button className=\"close-btn\" onClick={closeModel}>\n        play again\n      </button>\n    </div>\n  </div>\n}\n\nexport default Modal\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nimport SetupForm from './SetupForm'\nimport Loading from './Loading'\nimport Modal from './Modal'\nfunction App() {\n\n  const { waiting, loading, questions, index, correct, nextQuestion, checkAnswer } = useGlobalContext();\n  // console.log(\"global_context \" + useGlobalContext());\n\n  // console.log(loading);\n  if (waiting) {\n    return <SetupForm />\n  }\n  if (loading) {\n    return <Loading />\n  }\n  const { question, incorrect_answers, correct_answer } = questions[index];\n\n  let answers = [...incorrect_answers, correct_answer];\n\n  for (let i = answers.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [answers[i], answers[j]] = [answers[j], answers[i]];\n  }\n\n\n  return (\n    <main>\n      <Modal />\n      <section className=\"quiz\">\n        <p className=\"correct-answers\">\n          correct answer : {correct}/{index}\n        </p>\n        <article className=\"container\">\n          <h2 dangerouslySetInnerHTML={{ __html: question }}></h2>\n          <div className=\"btn-container\">\n            {answers.map((ans, index) => {\n              return (\n                <button className=\"answer-btn\" key={index}\n                  onClick={() => { checkAnswer(correct_answer === ans) }}\n                  dangerouslySetInnerHTML={{ __html: ans }} />\n              )\n            })}\n          </div>\n        </article>\n        <button className=\"next-question\" onClick={nextQuestion}>next question</button>\n      </section>\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}